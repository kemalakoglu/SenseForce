// <auto-generated />
using System;
using CodingPuzzleSıgnalR.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CodingPuzzleSıgnalR.ApplicationContext.Migrations
{
    [DbContext(typeof(CodingPuzzleContext))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CodingPuzzleSıgnalR.ApplicationContext.Entities.Message", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("DataId");

                    b.Property<DateTime>("InsertDate");

                    b.Property<string>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<long?>("TypeId");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.HasIndex("TypeId");

                    b.ToTable("Message","Message");
                });

            modelBuilder.Entity("CodingPuzzleSıgnalR.ApplicationContext.Entities.RefType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("InsertDate");

                    b.Property<string>("Key");

                    b.Property<long?>("ParentId");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("RefType","Message");
                });

            modelBuilder.Entity("CodingPuzzleSıgnalR.ApplicationContext.Entities.RefValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("InsertDate");

                    b.Property<long?>("RefTypeId");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("RefTypeId");

                    b.ToTable("RefValue","Message");
                });

            modelBuilder.Entity("CodingPuzzleSıgnalR.ApplicationContext.Entities.Message", b =>
                {
                    b.HasOne("CodingPuzzleSıgnalR.ApplicationContext.Entities.RefType", "Data")
                        .WithMany()
                        .HasForeignKey("DataId");

                    b.HasOne("CodingPuzzleSıgnalR.ApplicationContext.Entities.RefType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("CodingPuzzleSıgnalR.ApplicationContext.Entities.RefType", b =>
                {
                    b.HasOne("CodingPuzzleSıgnalR.ApplicationContext.Entities.RefType", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("CodingPuzzleSıgnalR.ApplicationContext.Entities.RefValue", b =>
                {
                    b.HasOne("CodingPuzzleSıgnalR.ApplicationContext.Entities.RefType", "RefType")
                        .WithMany()
                        .HasForeignKey("RefTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
